{"version":3,"sources":["images/down-chevron.svg","utils/constants.js","redux/modules/main/index.js","redux/modules/main/thunks.js","redux/reducers.js","redux/store.js","utils/funcs.js","algorithms.js","components/NavBar.js","components/Grid.js","App.js","reportWebVitals.js","index.js"],"names":["SPEED","FAST","verbose","displayName","speed","MODERATE","SLOW","SUPER_SLOW","STATE","DEFAULT","color","ACTIVE","SORTED","CURRENT","grid","createSlice","name","initialState","arraySize","timeouts","arrayValues","currentAlgorithm","reducers","setArraySize","state","payload","setSpeed","setArrayValues","vals","map","val","idx","setTimeouts","setCurrentAlgorithm","actions","stopSorting","dispatch","_getState","curTimeouts","main","Object","values","timeout","clearTimeout","addTimeout","curTimeout","newKey","keys","length","setTimeout","rerenderGrid","DOMArr","document","querySelectorAll","classList","replace","remove","getNewValues","initialArray","i","Math","round","random","rootReducer","combineReducers","mainReducer","toastr","toastrReducer","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","getHeight","Number","parseInt","swap","idx1","idx2","val1","val2","setItemState","add","removeItemState","getState","subscribe","ALGORITHMS","BUBBLE_SORT","func","j","curHeight","nextHeight","SELECTION_SORT","pastMaxIdx","Queue","curMaxIdx","isEmpty","dequeue","enqueue","INSERTION_SORT","doSwap","cur","toSort","swapSeq","temp","qLen","size","prev","lastSwapPos","CSS","styled","div","NavBar","useDispatch","useSelector","useState","curSize","setCurSize","showControl","setShowControl","className","id","onClick","src","DownChevron","type","min","max","defaultValue","onMouseUp","e","target","value","onChange","obj","RunButtonCSS","button","RunButton","Top","colorClasses","push","props","classes","Grid","useEffect","window","innerWidth","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","timeOut","newestOnTop","preventDuplicates","position","transitionIn","transitionOut","progressBar","closeOnToastrClick","getElementById"],"mappings":"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","file":"static/js/main.9400d7e7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/down-chevron.e69f8203.svg\";","export const MAX_VALUE = 80;\r\n\r\nexport const SPEED = {\r\n  FAST: {\r\n    verbose: \"FAST\",\r\n    displayName: \"Fast\",\r\n    speed: 10,\r\n  },\r\n  MODERATE: {\r\n    verbose: \"MODERATE\",\r\n    displayName: \"Moderate\",\r\n    speed: 30,\r\n  },\r\n  SLOW: {\r\n    verbose: \"SLOW\",\r\n    displayName: \"Slow\",\r\n    speed: 100,\r\n  },\r\n  SUPER_SLOW: {\r\n    verbose: \"SUPER_SLOW\",\r\n    displayName: \"Super slow\",\r\n    speed: 1000,\r\n  },\r\n};\r\n\r\nexport const STATE = {\r\n  DEFAULT: {\r\n    verbose: \"DEFAULT\",\r\n    color: \"blue\",\r\n  },\r\n  ACTIVE: {\r\n    verbose: \"ACTIVE\",\r\n    color: \"red\",\r\n  },\r\n  SORTED: {\r\n    verbose: \"SORTED\",\r\n    color: \"yellow\",\r\n  },\r\n  CURRENT: {\r\n    verbose: \"CURRENT\",\r\n    color: \"purple\",\r\n  },\r\n};\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst grid = createSlice({\r\n  name: \"main\",\r\n  initialState: {\r\n    arraySize: 40,\r\n    speed: 10,\r\n    timeouts: {},\r\n    arrayValues: {},\r\n    currentAlgorithm: \"BUBBLE_SORT\",\r\n  },\r\n  reducers: {\r\n    setArraySize(state, { payload }) {\r\n      return {\r\n        ...state,\r\n        arraySize: payload,\r\n      };\r\n    },\r\n    setSpeed(state, { payload }) {\r\n      return {\r\n        ...state,\r\n        speed: payload,\r\n      };\r\n    },\r\n    setArrayValues(state, { payload }) {\r\n      const vals = {};\r\n      payload.map((val, idx) => (vals[idx] = val));\r\n      return {\r\n        ...state,\r\n        arrayValues: vals,\r\n      };\r\n    },\r\n    setTimeouts(state, { payload }) {\r\n      return {\r\n        ...state,\r\n        timeouts: { ...payload },\r\n      };\r\n    },\r\n    setCurrentAlgorithm(state, { payload }) {\r\n      return {\r\n        ...state,\r\n        currentAlgorithm: payload,\r\n      };\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  setArraySize,\r\n  setSpeed,\r\n  setArrayValues,\r\n  setTimeouts,\r\n  setCurrentAlgorithm,\r\n} = grid.actions;\r\n\r\nexport default grid.reducer;\r\n","// State change functions\r\nimport { setTimeouts, setArrayValues } from \"./index\";\r\n\r\n// Constants\r\nimport { STATE, MAX_VALUE } from \"../../../utils/constants\";\r\n\r\nexport const stopSorting = () => {\r\n  return (dispatch, _getState) => {\r\n    const curTimeouts = _getState().main.timeouts;\r\n    Object.values(curTimeouts).map((timeout) => clearTimeout(timeout));\r\n    dispatch(setTimeouts({}));\r\n  };\r\n};\r\n\r\nexport const addTimeout = (timeout) => {\r\n  return (dispatch, _getState) => {\r\n    const curTimeout = _getState().main.timeouts;\r\n    const newKey = Object.keys(curTimeout).length;\r\n    dispatch(\r\n      setTimeouts({\r\n        ...curTimeout,\r\n        [newKey]: setTimeout(timeout, (newKey + 1) * _getState().main.speed),\r\n      })\r\n    );\r\n  };\r\n};\r\n\r\nexport const rerenderGrid = () => {\r\n  return (dispatch, _getState) => {\r\n    dispatch(stopSorting());\r\n    let DOMArr = document.querySelectorAll(\".array-item\");\r\n    Object.values(_getState().main.arrayValues).map((val, idx) => {\r\n      DOMArr[idx].classList.replace(DOMArr[idx].classList[2], `${val}`);\r\n      DOMArr[idx].classList.replace(\r\n        DOMArr[idx].classList[1],\r\n        `array-item-${val}`\r\n      );\r\n      DOMArr[idx].classList.remove(STATE.ACTIVE.verbose);\r\n      DOMArr[idx].classList.remove(STATE.SORTED.verbose);\r\n      DOMArr[idx].classList.remove(STATE.CURRENT.verbose);\r\n    });\r\n  };\r\n};\r\n\r\nexport const getNewValues = () => {\r\n  return (dispatch, _getState) => {\r\n    const initialArray = [];\r\n    for (let i = 0; i < _getState().main.arraySize; i++)\r\n      initialArray[i] = Math.round(Math.random() * MAX_VALUE) + 1;\r\n    dispatch(setArrayValues(initialArray));\r\n  };\r\n};\r\n","import { combineReducers } from \"redux\";\r\n// import { persistReducer } from \"redux-persist\";\r\n// import storage from \"redux-persist/lib/storage\";\r\n\r\n// reducers\r\nimport mainReducer from \"./modules/main\";\r\nimport { reducer as toastrReducer } from \"react-redux-toastr\";\r\n\r\nconst rootReducer = combineReducers({\r\n  main: mainReducer,\r\n  toastr: toastrReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n\r\n// Template\r\n\r\n// Persist Config:\r\n// const sideBarPersistConfig = {\r\n//   key: \"sidebar\",\r\n//   storage,\r\n//   whitelist: [\"role\", \"sideBarType\"],\r\n// }\r\n// Persist Reducer:\r\n// sidebar: persistReducer(sideBarPersistConfig, sideBarReducer),\r\n","import { createStore, applyMiddleware } from \"redux\";\r\n// import { persistStore } from \"redux-persist\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport rootReducer from \"./reducers.js\";\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\n// const persistor = persistStore(store);\r\n\r\nexport { store };\r\n\r\n// export { store, persistor };\r\n","// Constants\r\nimport { STATE } from \"./constants\";\r\n\r\nexport const getHeight = (idx) => {\r\n  return Number.parseInt(\r\n    document.querySelectorAll(\".array-item\")[idx].classList[2]\r\n  );\r\n};\r\n\r\nexport const swap = (idx1, idx2) => {\r\n  const DOMArr = document.querySelectorAll(\".array-item\");\r\n  const val1 = DOMArr[idx1].classList[2];\r\n  const val2 = DOMArr[idx2].classList[2];\r\n  DOMArr[idx1].classList.replace(val1, val2);\r\n  DOMArr[idx1].classList.replace(`array-item-${val1}`, `array-item-${val2}`);\r\n  DOMArr[idx2].classList.replace(val2, val1);\r\n  DOMArr[idx2].classList.replace(`array-item-${val2}`, `array-item-${val1}`);\r\n};\r\n\r\nexport const setItemState = (idx, state) => {\r\n  const DOMArr = document.querySelectorAll(\".array-item\");\r\n  DOMArr[idx].classList.add(state);\r\n};\r\n\r\nexport const removeItemState = (idx, state) => {\r\n  const DOMArr = document.querySelectorAll(\".array-item\");\r\n  DOMArr[idx].classList.remove(state);\r\n};\r\n","// DS\r\nimport { Queue } from \"buckets-js\";\r\n\r\n// Redux\r\nimport { store } from \"./redux/store\";\r\nimport { addTimeout } from \"./redux/modules/main/thunks\";\r\n\r\n// Constants\r\nimport { STATE } from \"./utils/constants\";\r\n\r\n// utils\r\nimport { getHeight, swap, setItemState, removeItemState } from \"./utils/funcs\";\r\n\r\nlet state = store.getState().main;\r\nlet { arraySize, speed: TIME_DELAY, timeouts } = state;\r\nstore.subscribe(() => {\r\n  state = store.getState().main;\r\n  ({ arraySize, speed: TIME_DELAY, timeouts } = state);\r\n});\r\n\r\nexport const bubbleSort = () => {\r\n  for (let i = 0; i < arraySize - 1; i++) {\r\n    for (let j = 0; j < arraySize - i - 1; j++) {\r\n      store.dispatch(\r\n        addTimeout(() => {\r\n          const curHeight = getHeight(j);\r\n          const nextHeight = getHeight(j + 1);\r\n          setItemState(j, STATE.ACTIVE.verbose);\r\n          if (j > 0) removeItemState(j - 1, STATE.ACTIVE.verbose);\r\n          if (curHeight > nextHeight) {\r\n            swap(j, j + 1);\r\n            if (j !== arraySize - i - 2)\r\n              setItemState(j + 1, STATE.ACTIVE.verbose);\r\n            removeItemState(j, STATE.ACTIVE.verbose);\r\n          }\r\n          if (j === arraySize - i - 2)\r\n            setItemState(j + 1, STATE.SORTED.verbose);\r\n          if (i === arraySize - 2) setItemState(0, STATE.SORTED.verbose);\r\n        })\r\n      );\r\n    }\r\n  }\r\n};\r\n\r\nexport const selectionSort = () => {\r\n  const pastMaxIdx = new Queue();\r\n  for (let i = arraySize - 1; i >= 0; i--) {\r\n    let curMaxIdx = 0;\r\n    for (let j = 0; j <= i; j++) {\r\n      store.dispatch(\r\n        addTimeout(() => {\r\n          if (!pastMaxIdx.isEmpty())\r\n            removeItemState(pastMaxIdx.dequeue(), STATE.CURRENT.verbose);\r\n          curMaxIdx = getHeight(curMaxIdx) < getHeight(j) ? j : curMaxIdx;\r\n          if (j > 0) removeItemState(j - 1, STATE.ACTIVE.verbose);\r\n          setItemState(j, STATE.ACTIVE.verbose);\r\n          if (i < arraySize - 1) {\r\n            removeItemState(i + 1, STATE.CURRENT.verbose);\r\n            setItemState(i + 1, STATE.SORTED.verbose);\r\n          }\r\n          if (j == i) pastMaxIdx.enqueue(curMaxIdx);\r\n          if (curMaxIdx !== i && j == i) {\r\n            setItemState(curMaxIdx, STATE.CURRENT.verbose);\r\n            setItemState(i, STATE.CURRENT.verbose);\r\n            swap(curMaxIdx, i);\r\n          }\r\n          if (i === 0) setItemState(0, STATE.SORTED.verbose);\r\n        })\r\n      );\r\n    }\r\n  }\r\n};\r\n\r\nexport const insertionSort = () => {\r\n  let doSwap, cur;\r\n  let toSort = { ...store.getState().main.arrayValues };\r\n  const swapSeq = new Queue();\r\n  for (let i = 1; i < arraySize; i++) {\r\n    cur = i;\r\n    doSwap = cur > 0 && toSort[cur - 1] > toSort[cur];\r\n    while (doSwap) {\r\n      swapSeq.enqueue([cur--, cur]);\r\n      let temp = toSort[cur];\r\n      toSort[cur] = toSort[cur + 1];\r\n      toSort[cur + 1] = temp;\r\n      doSwap = cur > 0 && toSort[cur - 1] > toSort[cur];\r\n    }\r\n  }\r\n\r\n  // Draw insertion sort\r\n  let qLen = swapSeq.size();\r\n  let prev = null;\r\n  let lastSwapPos = -1;\r\n  for (let i = 0; i < qLen; i++) {\r\n    store.dispatch(\r\n      addTimeout(() => {\r\n        let cur = swapSeq.dequeue();\r\n        if (prev !== null && prev[1] !== cur[0]) {\r\n          if (lastSwapPos !== -1)\r\n            removeItemState(lastSwapPos, STATE.CURRENT.verbose);\r\n          setItemState(prev[1], STATE.CURRENT.verbose);\r\n          removeItemState(prev[1], STATE.ACTIVE.verbose);\r\n          lastSwapPos = prev[1];\r\n        }\r\n        if (cur[1] < arraySize - 1)\r\n          removeItemState(cur[1] + 1, STATE.ACTIVE.verbose);\r\n        setItemState(cur[1], STATE.ACTIVE.verbose);\r\n        swap(cur[0], cur[1]);\r\n        prev = cur;\r\n        if (swapSeq.isEmpty()) {\r\n          removeItemState(cur[1], STATE.ACTIVE.verbose);\r\n          removeItemState(lastSwapPos, STATE.CURRENT.verbose);\r\n        }\r\n      })\r\n    );\r\n  }\r\n};\r\n\r\n/**\r\n * TODO:\r\n * Quick Sort\r\n * Merge sort\r\n * shell sort\r\n * counting sort\r\n * bogo sort\r\n */\r\n\r\n// All Algorithms\r\nexport const ALGORITHMS = {\r\n  BUBBLE_SORT: {\r\n    verbose: \"BUBBLE_SORT\",\r\n    displayName: \"Bubble sort\",\r\n    func: bubbleSort,\r\n  },\r\n  SELECTION_SORT: {\r\n    verbose: \"SELECTION_SORT\",\r\n    displayName: \"Selection sort\",\r\n    func: selectionSort,\r\n  },\r\n  INSERTION_SORT: {\r\n    verbose: \"INSERTION_SORT\",\r\n    displayName: \"Insertion sort\",\r\n    func: insertionSort,\r\n  },\r\n};\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\n// Images\r\nimport DownChevron from \"../images/down-chevron.svg\";\r\n\r\n// Constants\r\nimport { SPEED } from \"../utils/constants\";\r\n\r\n// redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  setSpeed,\r\n  setCurrentAlgorithm,\r\n  setArraySize,\r\n} from \"../redux/modules/main\";\r\nimport {\r\n  stopSorting,\r\n  rerenderGrid,\r\n  getNewValues,\r\n} from \"../redux/modules/main/thunks\";\r\n\r\n// Algorithms\r\nimport { ALGORITHMS } from \"../algorithms\";\r\n\r\nconst CSS = styled.div`\r\n  box-sizing: border-box;\r\n  margin: 0;\r\n  padding: 0;\r\n  width: 100vw;\r\n  height: min-content;\r\n\r\n  & * {\r\n    color: white;\r\n  }\r\n\r\n  .navbar {\r\n    background: rgb(2, 0, 15);\r\n    padding: 0.5em 1em;\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    box-sizing: border-box;\r\n\r\n    &.top {\r\n      button {\r\n        display: none;\r\n      }\r\n    }\r\n\r\n    & * {\r\n      margin: 0 0.5em;\r\n    }\r\n\r\n    #slider {\r\n      display: flex;\r\n      align-items: center;\r\n      flex-direction: column;\r\n      justify-content: center;\r\n\r\n      h4 {\r\n        margin: 0;\r\n        margin-right: 0.5em;\r\n        font-size: 0.9em;\r\n        font-weight: normal;\r\n      }\r\n    }\r\n\r\n    #brand {\r\n      display: flex;\r\n      align-items: center;\r\n      width: 100%;\r\n\r\n      h1 {\r\n        margin: 0;\r\n        font-size: 1em;\r\n      }\r\n    }\r\n  }\r\n\r\n  button,\r\n  select {\r\n    outline: none;\r\n    border: none;\r\n    cursor: pointer;\r\n    height: min-content;\r\n  }\r\n\r\n  button {\r\n    background: none;\r\n  }\r\n\r\n  select {\r\n    background: rgb(0, 94, 194);\r\n    border-radius: 0.5em;\r\n    padding: 0.2em;\r\n  }\r\n\r\n  optgroup,\r\n  option {\r\n    color: black;\r\n    borde-radius: 1em;\r\n    background: white;\r\n  }\r\n\r\n  #mobile-control-bar {\r\n    display: none;\r\n    background: rgb(2, 0, 15);\r\n    padding: 0 0.5em;\r\n    cursor: pointer;\r\n    height: 3em;\r\n\r\n    h1 {\r\n      color: white;\r\n      font-size: 1em;\r\n    }\r\n  }\r\n\r\n  .mobile-control-container {\r\n    width: 100vw;\r\n    position: fixed;\r\n    bottom: 0;\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    .navbar {\r\n      &.top {\r\n        button {\r\n          display: block;\r\n        }\r\n      }\r\n\r\n      &.bottom {\r\n        flex-direction: column;\r\n        align-items: center;\r\n        max-height: 0;\r\n        overflow: hidden;\r\n        padding: 0 0.5em;\r\n        transition: max-height 0.2s;\r\n\r\n        &.show {\r\n          max-height: 1000px;\r\n          transition: max-height 0.5s;\r\n        }\r\n\r\n        > * {\r\n          margin: 0.4em 0;\r\n        }\r\n\r\n        > button,\r\n        select {\r\n          width: 100%;\r\n          padding: 0.5em;\r\n        }\r\n\r\n        > :last-child {\r\n          margin-bottom: 1em;\r\n        }\r\n\r\n        #slider {\r\n          display: none;\r\n          flex-direction: row;\r\n          > :first-child {\r\n            order: 1;\r\n          }\r\n        }\r\n\r\n        button {\r\n          background: rgb(196, 183, 0);\r\n          border-radius: 0.5em;\r\n\r\n          &.run-btn {\r\n            display: none;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    #mobile-control-bar {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n\r\n      img {\r\n        height: 1em;\r\n\r\n        &.up {\r\n          transform: rotate(180deg);\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst NavBar = () => {\r\n  // Dispatch function\r\n  const dispatch = useDispatch();\r\n\r\n  // Global state\r\n  const { arraySize } = useSelector((state) => state.main);\r\n\r\n  // Local state\r\n  const [curSize, setCurSize] = useState(arraySize);\r\n  const [showControl, setShowControl] = useState(false);\r\n\r\n  return (\r\n    <CSS>\r\n      <div className={`mobile-control-container ${showControl ? \"show\" : \"\"}`}>\r\n        <div\r\n          id=\"mobile-control-bar\"\r\n          onClick={() => setShowControl((prev) => !prev)}\r\n        >\r\n          <h1>Controls</h1>\r\n          <img src={DownChevron} className={!showControl ? \"up\" : \"\"} />\r\n        </div>\r\n        <div className={`navbar bottom ${showControl ? \"show\" : \"\"}`}>\r\n          <div id=\"slider\">\r\n            <input\r\n              type=\"range\"\r\n              min=\"30\"\r\n              max=\"60\"\r\n              defaultValue={curSize}\r\n              onMouseUp={(e) => {\r\n                dispatch(setArraySize(e.target.value));\r\n              }}\r\n              onChange={(e) => setCurSize(e.target.value)}\r\n            />\r\n            <h4>Array size: {curSize}</h4>\r\n          </div>\r\n          <button onClick={() => dispatch(getNewValues())}>\r\n            Get new values\r\n          </button>\r\n          <button onClick={() => dispatch(stopSorting())}>Stop</button>\r\n          <RunButton />\r\n          <button onClick={() => dispatch(rerenderGrid())}>Reset</button>\r\n          <select\r\n            onChange={(e) => dispatch(setCurrentAlgorithm(e.target.value))}\r\n          >\r\n            <optgroup>\r\n              {Object.values(ALGORITHMS).map((obj, idx) => (\r\n                <option key={idx} value={obj.verbose}>\r\n                  {obj.displayName}\r\n                </option>\r\n              ))}\r\n            </optgroup>\r\n          </select>\r\n          <select\r\n            onChange={(e) => dispatch(setSpeed(SPEED[e.target.value].speed))}\r\n          >\r\n            <optgroup>\r\n              {Object.values(SPEED).map((obj, idx) => (\r\n                <option key={idx} value={obj.verbose}>\r\n                  {obj.displayName}\r\n                </option>\r\n              ))}\r\n            </optgroup>\r\n          </select>\r\n        </div>\r\n      </div>\r\n    </CSS>\r\n  );\r\n};\r\n\r\nconst RunButtonCSS = styled.button`\r\n  &.run-btn {\r\n    background: rgb(255, 227, 51);\r\n    color: black;\r\n    font-weight: bold;\r\n    border-radius: 0.5em;\r\n    padding: 0.2em 1em;\r\n    font-size: 1em;\r\n  }\r\n`;\r\n\r\nconst RunButton = () => {\r\n  const { currentAlgorithm } = useSelector((state) => state.main);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <RunButtonCSS\r\n      onClick={() => {\r\n        dispatch(rerenderGrid());\r\n        ALGORITHMS[currentAlgorithm].func();\r\n      }}\r\n      className=\"run-btn\"\r\n    >\r\n      Run\r\n    </RunButtonCSS>\r\n  );\r\n};\r\n\r\nconst Top = () => {\r\n  return (\r\n    <CSS>\r\n      <div className=\"navbar top\">\r\n        <div id=\"brand\">\r\n          <h1>Sorting Visualizer</h1>\r\n        </div>\r\n        <RunButton />\r\n      </div>\r\n    </CSS>\r\n  );\r\n};\r\n\r\nNavBar.Top = Top;\r\n\r\nexport default NavBar;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\n// Components\r\nimport NavBar from \"./NavBar\";\r\n\r\n// Redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getNewValues } from \"../redux/modules/main/thunks\";\r\n\r\n// Constants\r\nimport { MAX_VALUE, STATE } from \"../utils/constants\";\r\nimport { setArraySize } from \"../redux/modules/main\";\r\n\r\nconst CSS = styled.div`\r\n  overflow: hidden;\r\n\r\n  main {\r\n    height: 100vh;\r\n    width: 100vw;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    flex-direction: column;\r\n\r\n    &,\r\n    > div {\r\n      box-sizing: border-box;\r\n    }\r\n\r\n    .array-container {\r\n      width: 100%;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: flex-end;\r\n      height: 100%;\r\n      background: rgb(242, 242, 242);\r\n      margin-bottom: 3em;\r\n\r\n      .array-item {\r\n        background: ${STATE.DEFAULT.color};\r\n        width: 0.5em;\r\n        margin: 0 2px;\r\n\r\n        ${(() => {\r\n          let colorClasses = [];\r\n          Object.values(STATE).map((state) =>\r\n            colorClasses.push(`\r\n              &.${state.verbose} {\r\n                background: ${state.color};\r\n              }\r\n            `)\r\n          );\r\n          return colorClasses;\r\n        })()}\r\n      }\r\n\r\n      ${(props) =>\r\n        ((props) => {\r\n          const classes = [];\r\n          for (let i = 0; i < MAX_VALUE; i++) {\r\n            classes.push(`\r\n            .array-item-${props.arrayValues[i]} {\r\n              height: ${5 * props.arrayValues[i]}px;\r\n            }\r\n          `);\r\n          }\r\n          return classes;\r\n        })(props)}\r\n    }\r\n  }\r\n`;\r\n\r\nconst Grid = () => {\r\n  // Dispatch function\r\n  const dispatch = useDispatch();\r\n\r\n  // Global State\r\n  const { arraySize, arrayValues } = useSelector((state) => state.main);\r\n\r\n  useEffect(() => {\r\n    dispatch(getNewValues());\r\n  }, [arraySize]);\r\n\r\n  useEffect(() => {\r\n    if (window.innerWidth < 768) dispatch(setArraySize(20));\r\n  }, []);\r\n\r\n  return (\r\n    <CSS arrayValues={arrayValues}>\r\n      <main>\r\n        <NavBar.Top />\r\n        <div className=\"array-container\">\r\n          {arrayValues &&\r\n            Object.values(arrayValues).map((val, idx) => (\r\n              <div\r\n                key={idx}\r\n                className={`array-item array-item-${val} ${val}`}\r\n              ></div>\r\n            ))}\r\n        </div>\r\n        <NavBar />\r\n      </main>\r\n    </CSS>\r\n  );\r\n};\r\n\r\nexport default Grid;\r\n","import \"./App.css\";\n\n// components\nimport Grid from \"./components/Grid\";\n\nfunction App() {\n  return <Grid />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\n// redux\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\n\n// toastr\nimport ReduxToastr from \"react-redux-toastr\";\nimport \"react-redux-toastr/lib/css/react-redux-toastr.min.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n    <ReduxToastr\n      timeOut={4000}\n      newestOnTop={false}\n      preventDuplicates\n      position=\"top-right\"\n      getState={(state) => state.toastr} // This is the default\n      transitionIn=\"fadeIn\"\n      transitionOut=\"fadeOut\"\n      progressBar\n      closeOnToastrClick\n    />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}