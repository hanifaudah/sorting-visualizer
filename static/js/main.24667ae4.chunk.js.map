{"version":3,"sources":["logo.svg","utils/constants.js","redux/modules/main/index.js","redux/modules/main/thunks.js","redux/reducers.js","redux/store.js","utils/funcs.js","algorithms.js","components/NavBar.js","components/Grid.js","App.js","reportWebVitals.js","index.js"],"names":["SPEED","FAST","verbose","displayName","speed","MODERATE","SLOW","SUPER_SLOW","STATE","DEFAULT","color","ACTIVE","SORTED","CURRENT","grid","createSlice","name","initialState","arraySize","timeouts","arrayValues","currentAlgorithm","reducers","setArraySize","state","payload","setSpeed","setArrayValues","vals","map","val","idx","setTimeouts","setCurrentAlgorithm","actions","stopSorting","dispatch","_getState","curTimeouts","main","Object","values","timeout","clearTimeout","addTimeout","curTimeout","newKey","keys","length","setTimeout","rootReducer","combineReducers","mainReducer","toastr","toastrReducer","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","getHeight","Number","parseInt","document","querySelectorAll","classList","swap","idx1","idx2","DOMArr","val1","val2","replace","setItemState","add","removeItemState","remove","getState","subscribe","ALGORITHMS","BUBBLE_SORT","func","i","j","curHeight","nextHeight","SELECTION_SORT","pastMaxIdx","Queue","curMaxIdx","isEmpty","dequeue","enqueue","INSERTION_SORT","doSwap","cur","toSort","swapSeq","temp","qLen","size","prev","lastSwapPos","CSS","styled","div","NavBar","useDispatch","useSelector","useState","curSize","setCurSize","className","id","type","min","max","defaultValue","onMouseUp","e","target","value","onChange","onClick","obj","colorClasses","push","props","classes","Grid","useEffect","intialArray","Math","round","random","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","timeOut","newestOnTop","preventDuplicates","position","transitionIn","transitionOut","progressBar","closeOnToastrClick","getElementById"],"mappings":"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","file":"static/js/main.24667ae4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export const MAX_VALUE = 100;\r\n\r\nexport const SPEED = {\r\n  FAST: {\r\n    verbose: \"FAST\",\r\n    displayName: \"Fast\",\r\n    speed: 10,\r\n  },\r\n  MODERATE: {\r\n    verbose: \"MODERATE\",\r\n    displayName: \"Moderate\",\r\n    speed: 30,\r\n  },\r\n  SLOW: {\r\n    verbose: \"SLOW\",\r\n    displayName: \"Slow\",\r\n    speed: 100,\r\n  },\r\n  SUPER_SLOW: {\r\n    verbose: \"SUPER_SLOW\",\r\n    displayName: \"Super slow\",\r\n    speed: 1000,\r\n  },\r\n};\r\n\r\nexport const STATE = {\r\n  DEFAULT: {\r\n    verbose: \"DEFAULT\",\r\n    color: \"blue\",\r\n  },\r\n  ACTIVE: {\r\n    verbose: \"ACTIVE\",\r\n    color: \"red\",\r\n  },\r\n  SORTED: {\r\n    verbose: \"SORTED\",\r\n    color: \"yellow\",\r\n  },\r\n  CURRENT: {\r\n    verbose: \"CURRENT\",\r\n    color: \"purple\",\r\n  },\r\n};\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst grid = createSlice({\r\n  name: \"main\",\r\n  initialState: {\r\n    arraySize: 40,\r\n    speed: 10,\r\n    timeouts: {},\r\n    arrayValues: {},\r\n    currentAlgorithm: \"BUBBLE_SORT\",\r\n  },\r\n  reducers: {\r\n    setArraySize(state, { payload }) {\r\n      return {\r\n        ...state,\r\n        arraySize: payload,\r\n      };\r\n    },\r\n    setSpeed(state, { payload }) {\r\n      return {\r\n        ...state,\r\n        speed: payload,\r\n      };\r\n    },\r\n    setArrayValues(state, { payload }) {\r\n      const vals = {};\r\n      payload.map((val, idx) => (vals[idx] = val));\r\n      return {\r\n        ...state,\r\n        arrayValues: vals,\r\n      };\r\n    },\r\n    setTimeouts(state, { payload }) {\r\n      return {\r\n        ...state,\r\n        timeouts: { ...payload },\r\n      };\r\n    },\r\n    setCurrentAlgorithm(state, { payload }) {\r\n      return {\r\n        ...state,\r\n        currentAlgorithm: payload,\r\n      };\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  setArraySize,\r\n  setSpeed,\r\n  setArrayValues,\r\n  setTimeouts,\r\n  setCurrentAlgorithm,\r\n} = grid.actions;\r\n\r\nexport default grid.reducer;\r\n","// State change functions\r\nimport { setTimeouts } from \"./index\";\r\n\r\n// Constants\r\nimport { STATE } from \"../../../utils/constants\";\r\n\r\nexport const stopSorting = () => {\r\n  return (dispatch, _getState) => {\r\n    const curTimeouts = _getState().main.timeouts;\r\n    Object.values(curTimeouts).map((timeout) => clearTimeout(timeout));\r\n    dispatch(setTimeouts({}));\r\n  };\r\n};\r\n\r\nexport const addTimeout = (timeout) => {\r\n  return (dispatch, _getState) => {\r\n    const curTimeout = _getState().main.timeouts;\r\n    const newKey = Object.keys(curTimeout).length;\r\n    dispatch(\r\n      setTimeouts({\r\n        ...curTimeout,\r\n        [newKey]: setTimeout(timeout, (newKey + 1) * _getState().main.speed),\r\n      })\r\n    );\r\n  };\r\n};\r\n\r\nexport const rerenderGrid = () => {\r\n  return (dispatch, _getState) => {\r\n    dispatch(stopSorting());\r\n    let DOMArr = document.querySelectorAll(\".array-item\");\r\n    Object.values(_getState().main.arrayValues).map((val, idx) => {\r\n      DOMArr[idx].classList.replace(DOMArr[idx].classList[2], `${val}`);\r\n      DOMArr[idx].classList.replace(\r\n        DOMArr[idx].classList[1],\r\n        `array-item-${val}`\r\n      );\r\n      DOMArr[idx].classList.remove(STATE.ACTIVE.verbose);\r\n      DOMArr[idx].classList.remove(STATE.SORTED.verbose);\r\n      DOMArr[idx].classList.remove(STATE.CURRENT.verbose);\r\n    });\r\n  };\r\n};\r\n","import { combineReducers } from \"redux\";\r\n// import { persistReducer } from \"redux-persist\";\r\n// import storage from \"redux-persist/lib/storage\";\r\n\r\n// reducers\r\nimport mainReducer from \"./modules/main\";\r\nimport { reducer as toastrReducer } from \"react-redux-toastr\";\r\n\r\nconst rootReducer = combineReducers({\r\n  main: mainReducer,\r\n  toastr: toastrReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n\r\n// Template\r\n\r\n// Persist Config:\r\n// const sideBarPersistConfig = {\r\n//   key: \"sidebar\",\r\n//   storage,\r\n//   whitelist: [\"role\", \"sideBarType\"],\r\n// }\r\n// Persist Reducer:\r\n// sidebar: persistReducer(sideBarPersistConfig, sideBarReducer),\r\n","import { createStore, applyMiddleware } from \"redux\";\r\n// import { persistStore } from \"redux-persist\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport rootReducer from \"./reducers.js\";\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\n// const persistor = persistStore(store);\r\n\r\nexport { store };\r\n\r\n// export { store, persistor };\r\n","// Constants\r\nimport { STATE } from \"./constants\";\r\n\r\nexport const getHeight = (idx) => {\r\n  return Number.parseInt(\r\n    document.querySelectorAll(\".array-item\")[idx].classList[2]\r\n  );\r\n};\r\n\r\nexport const swap = (idx1, idx2) => {\r\n  const DOMArr = document.querySelectorAll(\".array-item\");\r\n  const val1 = DOMArr[idx1].classList[2];\r\n  const val2 = DOMArr[idx2].classList[2];\r\n  DOMArr[idx1].classList.replace(val1, val2);\r\n  DOMArr[idx1].classList.replace(`array-item-${val1}`, `array-item-${val2}`);\r\n  DOMArr[idx2].classList.replace(val2, val1);\r\n  DOMArr[idx2].classList.replace(`array-item-${val2}`, `array-item-${val1}`);\r\n};\r\n\r\nexport const setItemState = (idx, state) => {\r\n  const DOMArr = document.querySelectorAll(\".array-item\");\r\n  DOMArr[idx].classList.add(state);\r\n};\r\n\r\nexport const removeItemState = (idx, state) => {\r\n  const DOMArr = document.querySelectorAll(\".array-item\");\r\n  DOMArr[idx].classList.remove(state);\r\n};\r\n","// DS\r\nimport { Queue } from \"buckets-js\";\r\n\r\n// Redux\r\nimport { store } from \"./redux/store\";\r\nimport { addTimeout } from \"./redux/modules/main/thunks\";\r\n\r\n// Constants\r\nimport { STATE } from \"./utils/constants\";\r\n\r\n// utils\r\nimport { getHeight, swap, setItemState, removeItemState } from \"./utils/funcs\";\r\n\r\nlet state = store.getState().main;\r\nlet { arraySize, speed: TIME_DELAY, timeouts } = state;\r\nstore.subscribe(() => {\r\n  state = store.getState().main;\r\n  ({ arraySize, speed: TIME_DELAY, timeouts } = state);\r\n});\r\n\r\nexport const bubbleSort = () => {\r\n  for (let i = 0; i < arraySize - 1; i++) {\r\n    for (let j = 0; j < arraySize - i - 1; j++) {\r\n      store.dispatch(\r\n        addTimeout(() => {\r\n          const curHeight = getHeight(j);\r\n          const nextHeight = getHeight(j + 1);\r\n          setItemState(j, STATE.ACTIVE.verbose);\r\n          if (j > 0) removeItemState(j - 1, STATE.ACTIVE.verbose);\r\n          if (curHeight > nextHeight) {\r\n            swap(j, j + 1);\r\n            if (j !== arraySize - i - 2)\r\n              setItemState(j + 1, STATE.ACTIVE.verbose);\r\n            removeItemState(j, STATE.ACTIVE.verbose);\r\n          }\r\n          if (j === arraySize - i - 2)\r\n            setItemState(j + 1, STATE.SORTED.verbose);\r\n          if (i === arraySize - 2) setItemState(0, STATE.SORTED.verbose);\r\n        })\r\n      );\r\n    }\r\n  }\r\n};\r\n\r\nexport const selectionSort = () => {\r\n  const pastMaxIdx = new Queue();\r\n  for (let i = arraySize - 1; i >= 0; i--) {\r\n    let curMaxIdx = 0;\r\n    for (let j = 0; j <= i; j++) {\r\n      store.dispatch(\r\n        addTimeout(() => {\r\n          if (!pastMaxIdx.isEmpty())\r\n            removeItemState(pastMaxIdx.dequeue(), STATE.CURRENT.verbose);\r\n          curMaxIdx = getHeight(curMaxIdx) < getHeight(j) ? j : curMaxIdx;\r\n          if (j > 0) removeItemState(j - 1, STATE.ACTIVE.verbose);\r\n          setItemState(j, STATE.ACTIVE.verbose);\r\n          if (i < arraySize - 1) {\r\n            removeItemState(i + 1, STATE.CURRENT.verbose);\r\n            setItemState(i + 1, STATE.SORTED.verbose);\r\n          }\r\n          if (j == i) pastMaxIdx.enqueue(curMaxIdx);\r\n          if (curMaxIdx !== i && j == i) {\r\n            setItemState(curMaxIdx, STATE.CURRENT.verbose);\r\n            setItemState(i, STATE.CURRENT.verbose);\r\n            swap(curMaxIdx, i);\r\n          }\r\n          if (i === 0) setItemState(0, STATE.SORTED.verbose);\r\n        })\r\n      );\r\n    }\r\n  }\r\n};\r\n\r\nexport const insertionSort = () => {\r\n  let doSwap, cur;\r\n  let toSort = { ...store.getState().main.arrayValues };\r\n  const swapSeq = new Queue();\r\n  for (let i = 1; i < arraySize; i++) {\r\n    cur = i;\r\n    doSwap = cur > 0 && toSort[cur - 1] > toSort[cur];\r\n    while (doSwap) {\r\n      swapSeq.enqueue([cur--, cur]);\r\n      let temp = toSort[cur];\r\n      toSort[cur] = toSort[cur + 1];\r\n      toSort[cur + 1] = temp;\r\n      doSwap = cur > 0 && toSort[cur - 1] > toSort[cur];\r\n    }\r\n  }\r\n\r\n  // Draw insertion sort\r\n  let qLen = swapSeq.size();\r\n  let prev = null;\r\n  let lastSwapPos = -1;\r\n  for (let i = 0; i < qLen; i++) {\r\n    store.dispatch(\r\n      addTimeout(() => {\r\n        let cur = swapSeq.dequeue();\r\n        if (prev !== null && prev[1] !== cur[0]) {\r\n          if (lastSwapPos !== -1)\r\n            removeItemState(lastSwapPos, STATE.CURRENT.verbose);\r\n          setItemState(prev[1], STATE.CURRENT.verbose);\r\n          removeItemState(prev[1], STATE.ACTIVE.verbose);\r\n          lastSwapPos = prev[1];\r\n        }\r\n        if (cur[1] < arraySize - 1)\r\n          removeItemState(cur[1] + 1, STATE.ACTIVE.verbose);\r\n        setItemState(cur[1], STATE.ACTIVE.verbose);\r\n        swap(cur[0], cur[1]);\r\n        prev = cur;\r\n        if (swapSeq.isEmpty()) {\r\n          removeItemState(cur[1], STATE.ACTIVE.verbose);\r\n          removeItemState(lastSwapPos, STATE.CURRENT.verbose);\r\n        }\r\n      })\r\n    );\r\n  }\r\n};\r\n\r\n/**\r\n * TODO:\r\n * Quick Sort\r\n * Merge sort\r\n * shell sort\r\n * counting sort\r\n * bogo sort\r\n */\r\n\r\n// All Algorithms\r\nexport const ALGORITHMS = {\r\n  BUBBLE_SORT: {\r\n    verbose: \"BUBBLE_SORT\",\r\n    displayName: \"Bubble sort\",\r\n    func: bubbleSort,\r\n  },\r\n  SELECTION_SORT: {\r\n    verbose: \"SELECTION_SORT\",\r\n    displayName: \"Selection sort\",\r\n    func: selectionSort,\r\n  },\r\n  INSERTION_SORT: {\r\n    verbose: \"INSERTION_SORT\",\r\n    displayName: \"Insertion sort\",\r\n    func: insertionSort,\r\n  },\r\n};\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\n// Constants\r\nimport { SPEED } from \"../utils/constants\";\r\n\r\n// redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  setSpeed,\r\n  setCurrentAlgorithm,\r\n  setArraySize,\r\n} from \"../redux/modules/main\";\r\nimport { stopSorting, rerenderGrid } from \"../redux/modules/main/thunks\";\r\n\r\n// Algorithms\r\nimport { ALGORITHMS } from \"../algorithms\";\r\n\r\nconst CSS = styled.div`\r\n  box-sizing: border-box;\r\n  margin: 0;\r\n  padding: 0;\r\n  width: 100vw;\r\n  height: min-content;\r\n\r\n  .navbar {\r\n    background: grey;\r\n    padding: 0.5em 1em;\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n\r\n    #slider {\r\n      display: flex;\r\n      align-items: center;\r\n\r\n      h4 {\r\n        margin: 0;\r\n        margin-right: 1em;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst NavBar = () => {\r\n  // Dispatch function\r\n  const dispatch = useDispatch();\r\n\r\n  // Global state\r\n  const { currentAlgorithm } = useSelector((state) => state.main);\r\n\r\n  // Local state\r\n  const [curSize, setCurSize] = useState(40);\r\n\r\n  return (\r\n    <CSS>\r\n      <div className=\"navbar\">\r\n        <div id=\"slider\">\r\n          <h4>{curSize}</h4>\r\n          <input\r\n            type=\"range\"\r\n            min=\"30\"\r\n            max=\"60\"\r\n            defaultValue={curSize}\r\n            onMouseUp={(e) => {\r\n              dispatch(setArraySize(e.target.value));\r\n            }}\r\n            onChange={(e) => setCurSize(e.target.value)}\r\n          />\r\n        </div>\r\n        <button onClick={() => dispatch(stopSorting())}>Stop</button>\r\n        <button onClick={() => dispatch(rerenderGrid())}>Reset</button>\r\n        <button onClick={ALGORITHMS[currentAlgorithm].func}>Run</button>\r\n        <select onChange={(e) => dispatch(setCurrentAlgorithm(e.target.value))}>\r\n          {Object.values(ALGORITHMS).map((obj, idx) => (\r\n            <option key={idx} value={obj.verbose}>\r\n              {obj.displayName}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <select\r\n          onChange={(e) => dispatch(setSpeed(SPEED[e.target.value].speed))}\r\n        >\r\n          {Object.values(SPEED).map((obj, idx) => (\r\n            <option key={idx} value={obj.verbose}>\r\n              {obj.displayName}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n    </CSS>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\n// Components\r\nimport NavBar from \"./NavBar\";\r\n\r\n// Redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setArrayValues } from \"../redux/modules/main\";\r\n\r\n// Constants\r\nimport { MAX_VALUE, STATE } from \"../utils/constants\";\r\n\r\nconst CSS = styled.div`\r\n  overflow: hidden;\r\n\r\n  main {\r\n    height: 100vh;\r\n    width: 100vw;\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    flex-direction: column;\r\n\r\n    &,\r\n    > div {\r\n      box-sizing: border-box;\r\n    }\r\n\r\n    .array-container {\r\n      width: 100%;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: flex-end;\r\n\r\n      .array-item {\r\n        background: ${STATE.DEFAULT.color};\r\n        width: 0.5em;\r\n        margin: 0 2px;\r\n\r\n        ${(() => {\r\n          let colorClasses = [];\r\n          Object.values(STATE).map((state) =>\r\n            colorClasses.push(`\r\n              &.${state.verbose} {\r\n                background: ${state.color};\r\n              }\r\n            `)\r\n          );\r\n          return colorClasses;\r\n        })()}\r\n      }\r\n\r\n      ${(props) =>\r\n        ((props) => {\r\n          const classes = [];\r\n          for (let i = 0; i < MAX_VALUE; i++) {\r\n            classes.push(`\r\n            .array-item-${props.arrayValues[i]} {\r\n              height: ${5 * props.arrayValues[i]}px;\r\n            }\r\n          `);\r\n          }\r\n          return classes;\r\n        })(props)}\r\n    }\r\n  }\r\n`;\r\n\r\nconst Grid = () => {\r\n  // Dispatch function\r\n  const dispatch = useDispatch();\r\n\r\n  // Global State\r\n  const { arraySize, arrayValues } = useSelector((state) => state.main);\r\n\r\n  // Local state\r\n  // const [arrayValues, setArrayValues] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const intialArray = [];\r\n    for (let i = 0; i < arraySize; i++)\r\n      intialArray[i] = Math.round(Math.random() * MAX_VALUE) + 1;\r\n    dispatch(setArrayValues(intialArray));\r\n  }, [arraySize]);\r\n\r\n  return (\r\n    <CSS arrayValues={arrayValues}>\r\n      <main>\r\n        <div className=\"array-container\">\r\n          {arrayValues &&\r\n            Object.values(arrayValues).map((val, idx) => (\r\n              <div\r\n                key={idx}\r\n                className={`array-item array-item-${val} ${val}`}\r\n              ></div>\r\n            ))}\r\n        </div>\r\n        <NavBar />\r\n      </main>\r\n    </CSS>\r\n  );\r\n};\r\n\r\nexport default Grid;\r\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\n\n// components\nimport Grid from \"./components/Grid\";\n\nfunction App() {\n  return <Grid />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\n// redux\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\n\n// toastr\nimport ReduxToastr from \"react-redux-toastr\";\nimport \"react-redux-toastr/lib/css/react-redux-toastr.min.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n    <ReduxToastr\n      timeOut={4000}\n      newestOnTop={false}\n      preventDuplicates\n      position=\"top-right\"\n      getState={(state) => state.toastr} // This is the default\n      transitionIn=\"fadeIn\"\n      transitionOut=\"fadeOut\"\n      progressBar\n      closeOnToastrClick\n    />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}